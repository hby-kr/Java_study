package tj703.advanced;
// 자바는 강타입 언어라서, 무분별하게 많이 사용할 일이 별로 없다.
// 그럼 언제 쓰게 되는가? (자바에서의 상수의 목적)

import javax.swing.*;
import java.awt.*;

interface ConstInterface {
   int a= 10; // 인터페이스는 객체가 될 수 없기 때문에, 필드도 정의할 수 없다.
   public final static int b = 20; // 즉 상수만 설정할 수 있다.
   // a앞에도 public final static가 생략된 것
   // 자동으로 static 필드르 정의하는데, 보통 static 필드로 공유되는 자원은 상수기 때문이다.

   // 추상메서드만 작성가능
   void add(); // == public abstract void add();
}


public class L13Final2 {
   public static void main(String[] args) {
      JFrame frame = new JFrame();
      frame.add(new JButton("버튼"), BorderLayout.SOUTH);
      // BorderLayout.SOUTH :  얘가 상수의 진정한 사용 목적.

//상수값의 불변성 보장: final을 사용하여 변수에 값을 한 번만 할당하도록 강제할 수 있습니다.
// 상수를 정의할 때 final을 사용해야 값이 변경되지 않도록 보장할 수 있습니다.
      // public static final double PI = 3.14159;


   }
}


/* 패키지 주소를 적어서, 특정 변수 값을 가져오기
패키지 주소라는 표현은 보통 특정 클래스나 객체가 포함된 패키지를 지칭하는데, 이 패키지에서 정의된 특정 변수나 필드를 가져오는 방식에 대해 이야기할 수 있습니다.

자바에서 패키지에 포함된 변수를 가져오는 방법은 여러 가지가 있으며, 크게 두 가지로 나눠볼 수 있습니다:
1. 클래스 내의 정적(static) 변수 가져오기
정적 변수는 클래스가 메모리에 로드될 때 초기화되며, 객체를 생성하지 않고 클래스 이름으로 직접 접근할 수 있습니다.

2. 클래스 내의 인스턴스 변수 가져오기
인스턴스 변수는 객체를 생성해야만 접근할 수 있는 변수입니다.
이 경우 new 키워드를 사용해 객체를 생성한 후, 인스턴스 변수에 접근할 수 있습니다.

3. 다른 패키지에서 특정 변수 값을 가져오기 (패키지 주소 사용)
패키지 주소를 사용해서 변수를 가져오는 것은 기본적으로 해당 변수가 public 접근 제한자를 가지고 있어야 하며,
이를 통해 다른 패키지에서 클래스를 import하고 변수를 사용할 수 있습니다.
import를 사용해 클래스를 불러오고, 클래스의 변수나 메서드를 호출하는 방식입니다.
 */


/* ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ 자바 시험 문제들

[문항1] 자바나 자바스크립트와 같은 프로그램 언어에서 기본형과 자료형의 차이점에 대해 서술하세요.
데이터가 저장되고 참조되는 방식을 기준으로 서술하시면 됩니다. 기본형 데이터와 자료형 데이터의 차이점을 얼마나 이해하고 있으며 기본형 데이터를 왜 정의하고 사용하는 지를 알고 있는지 확인하기 위한 문제입니다.

[문항2] 자바의 기본형 종류를 아는 만큼 작성하세요.
8개의 기본형을 작성하고 그 특징에 대해 간략하게 서술하시면 됩니다.

[문항3] 객체지향 문법 다형상에 대해 서술하시고 다형성을 사용하는 3가지 방법을 설명하세요.
다형성의 개념에 대해 이해하고 각 다형성 기법들의 특징을 알고 있는지 확인하는 문제입니다.

[문항4] 자바에서 타입이 무엇인지 설명하시고 자바의 3가지 타입 정의 방법에 대해서도 서술하세요.
자료형의 타입을 정의하는 이유와 추상화에 대한 이해를 확인하기 위한 문제입니다.

[문항5] 자바에서 부모 타입을 자식이 상속 받으면 객체가 생성될때 부모타입의 생성자를 꼭 한번 호출해야 합니다.
이는 무엇 때문에 그렇게 하는 건가요?
상속에 대한 이해를 확인하는 문제입니다.

ㅡㅡㅡㅡㅡㅡ

[문항1] 자바나 자바스크립트와 같은 프로그램 언어에서 기본형과 자료형의 차이점에 대해 서술하세요.

데이터가 저장되고 참조되는 방식을 기준으로 서술하시면 됩니다.
기본형 데이터와 자료형 데이터의 차이점을 얼마나 이해하고 있으며
기본형 데이터를 왜 정의하고 사용하는 지를 알고 있는지 확인하기 위한 문제입니다.

>
자바나 자바스크립트와 같은 프로그램 언어에서 기본형과 자료형의 차이점은
데이터가 저장되는 방식과 참조되는 방식에 따라 나뉜다고 할 수 있다.

기본형 데이터는 값 자체가 메모리에 직접 생성되고 저장되는 데이터 유형이다.
기본형 데이터의 변수는 메모리에 저장된 그 자체로 데이터를 가지고 있기 때문에,
참조나 (메모리 내의)주소를 이용해 다른 곳에 저장되어 있는 데이터를 참조하거나 복사할 필요가 없다.
기본형 데이터가 생성되어 메모리에 저장되면 이후로는 불변하고,
다른 변수에 복사했을 경우, 저장된 값이 복사되어 저장된다. 결국 원본의 값과 복사된 값은 독립적인 데이터이다.

자료형 데이터는 참조형 데이터라고도 말할 수 있다.
기본형 데이터에 비해 많은 메모리를 사용한다.
자료형 데이터는 데이터 값이 메모리 상의 다른 위치에 저장되어 있고,
그 값을 메모리 상의 주소를 통해 접근하는 방식으로 구성되어 있는 데이터 뭉치라고 할 수 있다.
다시 말해 데이터를 직접 저장하는 것이 아니라 그 데이터를 가리키는 주소만 저장하고 있다.


[문항2] 자바의 기본형 종류를 아는 만큼 작성하세요.
8개의 기본형을 작성하고 그 특징에 대해 간략하게 서술하시면 됩니다.

>
자바의 기본형 데이터는 숫자(정수4개 실수2개의)와, boolean,
그리고 문자표에 약속된 하나의 문자를 기본형(총 8개)으로 가진다.
기본형 데이터의 정수 네 종류의 이름은 byte, short, int, long.
각 1,2,4,8바이트의 크기를 가지고, 그 데이터의 크기에 비례하여 정수값을 표현할 수 있는 범위가 달라진다.
기본형 데이터의 실수 두 종류의 이름은 float와 double.
각 데이터 크기는 4, 8바이트이고, 이 둘도 데이터의 크기에 비례하여 실수값을 표현할 수 있는 범위가 달라진다.
나머지 두 기본형 데이터는 boolean과 char
boolean은 0과 1로 표현하는 논리값을 저장하는 데에 사용한다.
char는 유니코드 문자 집합에서 지원하는 하나의 문자를 말한다.



[문항3] 객체지향 문법 다형성에 대해 서술하시고 다형성을 사용하는 3가지 방법을 설명하세요.
다형성의 개념에 대해 이해하고 각 다형성 기법들의 특징을 알고 있는지 확인하는 문제입니다.

> 다형성polymorphism은 하나의 이름을 가지고 여러 기능을 수행하는 성질을 말한다.
java에서의 다형성은 세가지 개념으로 나눠서 설명할 수 있다.
1) 클래스 타입의 다형성
2) 메서드의 다형성 중 overloading
2) 메서드의 다형성 중 overriding

클래스 타입의 다형성은 상속받고 있는 하나의 클래스에서, 다양한 객체를 처리할 수 있는 능력을 의미한다. 이는 객체지향문법의 상속 관계로 인해 가능한 것이다.
오버로딩(Overloading)은 하나의 클래스 내부에서 같은 이름을 가진 메서드를 여러 번 정의하되, 매개변수의 개수나 타입에 따라 여러 가지로 정의하는 것.
오버라이딩(Overriding)은 부모 클래스의 메서드를 상속받은 자식 클래스에서 재정의하여 동작을 변경하는 것.
그 결과 하나의 코드 내에서 동명의 메서드가 다른 기능으로 사용될 수 있다.


[문항4] 자바에서 타입이 무엇인지 설명하시고 자바의 3가지 타입 정의 방법에 대해서도 서술하세요.
자료형의 타입을 정의하는 이유와 추상화에 대한 이해를 확인하기 위한 문제입니다.

> 자바에서의 타입을 셋으로 구분하면, 클래스class, 추상클래스(Abstract Class), 인터페이스(Interface)다.
클래스는 객체 지향 프로그래밍의 기본적인 설계 단위다. 클래스 내부에 속성(필드)과 메서드을 정의하여 인스턴스 객체를 생성할 수 있다.

추상클래스와 인터페이스는 인스턴스를 생성할 수 없는 클래스다.
구체적인 내용을 담아서 곧장 인스턴스 객체를 생성할 수 있는 클래스class의 상위개념이라 할 수 있다.
추상클래스와 인터페이스를 추상적으로 만들어 정의하고,
이를 각 구체적인 클래스에 상속(extends 또는 implement)하여 사용함으로써, 그로 인해 코드의 효율성을 높일 수 있다.


[문항5] 자바에서 부모 타입을 자식이 상속 받으면 객체가 생성될때 부모타입의 생성자를 꼭 한번 호출해야 합니다.
이는 무엇 때문에 그렇게 하는 건가요? 상속에 대한 이해를 확인하는 문제입니다.

자식 인스턴스 객체는 생성될 때, 먼저 부모의 객체를 내부에 생성하기 때문이다.
단지 부모클래스의 생성자 규칙을 따라야 한다는 규칙을 정하고 있는 것이 아니라,
자식 객체가 생성되면서 동시에 부모의 인스턴스 객체 또한 하나가 생성되기 때문에,
혹여나 부모클래스에서 생성사 규칙을 수정하였다면, 당연히 자식클래스 내부 생성자에서도 그 수정된 바를 적용해주어야 오류가 나지 않는다.



 */